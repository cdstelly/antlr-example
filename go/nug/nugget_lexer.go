// Generated from Nugget.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 21, 157,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 3, 2, 3, 2, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9,
	3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10,
	5, 10, 70, 10, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3,
	11, 5, 11, 80, 10, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12,
	3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3,
	14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 15, 3, 15, 5, 15, 112, 10, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3,
	16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 5, 16, 126, 10, 16, 3, 17,
	6, 17, 129, 10, 17, 13, 17, 14, 17, 130, 3, 17, 3, 17, 3, 18, 3, 18, 3,
	18, 7, 18, 138, 10, 18, 12, 18, 14, 18, 141, 11, 18, 3, 19, 3, 19, 3, 19,
	7, 19, 146, 10, 19, 12, 19, 14, 19, 149, 11, 19, 3, 20, 6, 20, 152, 10,
	20, 13, 20, 14, 20, 153, 3, 21, 3, 21, 2, 2, 22, 3, 3, 5, 4, 7, 5, 9, 6,
	11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29,
	16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 2, 3, 2, 5, 5, 2, 11, 12,
	15, 15, 34, 34, 5, 2, 67, 92, 97, 97, 99, 124, 7, 2, 48, 48, 60, 60, 67,
	92, 97, 97, 99, 124, 2, 165, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7,
	3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2,
	15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2,
	2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2,
	2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2,
	2, 2, 2, 39, 3, 2, 2, 2, 3, 43, 3, 2, 2, 2, 5, 45, 3, 2, 2, 2, 7, 47, 3,
	2, 2, 2, 9, 49, 3, 2, 2, 2, 11, 51, 3, 2, 2, 2, 13, 53, 3, 2, 2, 2, 15,
	55, 3, 2, 2, 2, 17, 57, 3, 2, 2, 2, 19, 69, 3, 2, 2, 2, 21, 79, 3, 2, 2,
	2, 23, 81, 3, 2, 2, 2, 25, 88, 3, 2, 2, 2, 27, 93, 3, 2, 2, 2, 29, 111,
	3, 2, 2, 2, 31, 125, 3, 2, 2, 2, 33, 128, 3, 2, 2, 2, 35, 134, 3, 2, 2,
	2, 37, 142, 3, 2, 2, 2, 39, 151, 3, 2, 2, 2, 41, 155, 3, 2, 2, 2, 43, 44,
	7, 63, 2, 2, 44, 4, 3, 2, 2, 2, 45, 46, 7, 61, 2, 2, 46, 6, 3, 2, 2, 2,
	47, 48, 7, 36, 2, 2, 48, 8, 3, 2, 2, 2, 49, 50, 7, 46, 2, 2, 50, 10, 3,
	2, 2, 2, 51, 52, 7, 41, 2, 2, 52, 12, 3, 2, 2, 2, 53, 54, 7, 42, 2, 2,
	54, 14, 3, 2, 2, 2, 55, 56, 7, 43, 2, 2, 56, 16, 3, 2, 2, 2, 57, 58, 7,
	117, 2, 2, 58, 59, 7, 107, 2, 2, 59, 60, 7, 112, 2, 2, 60, 18, 3, 2, 2,
	2, 61, 62, 7, 110, 2, 2, 62, 63, 7, 113, 2, 2, 63, 64, 7, 99, 2, 2, 64,
	70, 7, 102, 2, 2, 65, 66, 7, 78, 2, 2, 66, 67, 7, 81, 2, 2, 67, 68, 7,
	67, 2, 2, 68, 70, 7, 70, 2, 2, 69, 61, 3, 2, 2, 2, 69, 65, 3, 2, 2, 2,
	70, 20, 3, 2, 2, 2, 71, 72, 7, 104, 2, 2, 72, 73, 7, 116, 2, 2, 73, 74,
	7, 113, 2, 2, 74, 80, 7, 111, 2, 2, 75, 76, 7, 72, 2, 2, 76, 77, 7, 84,
	2, 2, 77, 78, 7, 81, 2, 2, 78, 80, 7, 79, 2, 2, 79, 71, 3, 2, 2, 2, 79,
	75, 3, 2, 2, 2, 80, 22, 3, 2, 2, 2, 81, 82, 7, 117, 2, 2, 82, 83, 7, 103,
	2, 2, 83, 84, 7, 110, 2, 2, 84, 85, 7, 103, 2, 2, 85, 86, 7, 101, 2, 2,
	86, 87, 7, 118, 2, 2, 87, 24, 3, 2, 2, 2, 88, 89, 7, 106, 2, 2, 89, 90,
	7, 99, 2, 2, 90, 91, 7, 117, 2, 2, 91, 92, 7, 106, 2, 2, 92, 26, 3, 2,
	2, 2, 93, 94, 7, 103, 2, 2, 94, 95, 7, 122, 2, 2, 95, 96, 7, 118, 2, 2,
	96, 97, 7, 116, 2, 2, 97, 98, 7, 99, 2, 2, 98, 99, 7, 101, 2, 2, 99, 100,
	7, 118, 2, 2, 100, 28, 3, 2, 2, 2, 101, 102, 7, 104, 2, 2, 102, 103, 7,
	107, 2, 2, 103, 104, 7, 110, 2, 2, 104, 105, 7, 103, 2, 2, 105, 112, 7,
	117, 2, 2, 106, 107, 7, 72, 2, 2, 107, 108, 7, 75, 2, 2, 108, 109, 7, 78,
	2, 2, 109, 110, 7, 71, 2, 2, 110, 112, 7, 85, 2, 2, 111, 101, 3, 2, 2,
	2, 111, 106, 3, 2, 2, 2, 112, 30, 3, 2, 2, 2, 113, 114, 7, 107, 2, 2, 114,
	115, 7, 111, 2, 2, 115, 116, 7, 99, 2, 2, 116, 117, 7, 105, 2, 2, 117,
	118, 7, 103, 2, 2, 118, 126, 7, 117, 2, 2, 119, 120, 7, 75, 2, 2, 120,
	121, 7, 79, 2, 2, 121, 122, 7, 67, 2, 2, 122, 123, 7, 73, 2, 2, 123, 124,
	7, 71, 2, 2, 124, 126, 7, 85, 2, 2, 125, 113, 3, 2, 2, 2, 125, 119, 3,
	2, 2, 2, 126, 32, 3, 2, 2, 2, 127, 129, 9, 2, 2, 2, 128, 127, 3, 2, 2,
	2, 129, 130, 3, 2, 2, 2, 130, 128, 3, 2, 2, 2, 130, 131, 3, 2, 2, 2, 131,
	132, 3, 2, 2, 2, 132, 133, 8, 17, 2, 2, 133, 34, 3, 2, 2, 2, 134, 139,
	9, 3, 2, 2, 135, 138, 9, 3, 2, 2, 136, 138, 5, 41, 21, 2, 137, 135, 3,
	2, 2, 2, 137, 136, 3, 2, 2, 2, 138, 141, 3, 2, 2, 2, 139, 137, 3, 2, 2,
	2, 139, 140, 3, 2, 2, 2, 140, 36, 3, 2, 2, 2, 141, 139, 3, 2, 2, 2, 142,
	147, 9, 3, 2, 2, 143, 146, 9, 4, 2, 2, 144, 146, 5, 41, 21, 2, 145, 143,
	3, 2, 2, 2, 145, 144, 3, 2, 2, 2, 146, 149, 3, 2, 2, 2, 147, 145, 3, 2,
	2, 2, 147, 148, 3, 2, 2, 2, 148, 38, 3, 2, 2, 2, 149, 147, 3, 2, 2, 2,
	150, 152, 5, 41, 21, 2, 151, 150, 3, 2, 2, 2, 152, 153, 3, 2, 2, 2, 153,
	151, 3, 2, 2, 2, 153, 154, 3, 2, 2, 2, 154, 40, 3, 2, 2, 2, 155, 156, 4,
	50, 59, 2, 156, 42, 3, 2, 2, 2, 13, 2, 69, 79, 111, 125, 130, 137, 139,
	145, 147, 153, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'='", "';'", "'\"'", "','", "'''", "'('", "')'", "'sin'", "", "",
	"'select'", "'hash'", "'extract'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "SIN", "LOAD", "FROM", "SELECT", "HASH",
	"EXTRACT", "FILES", "IMAGES", "WS", "Id", "Source", "NUMBER",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "SIN", "LOAD",
	"FROM", "SELECT", "HASH", "EXTRACT", "FILES", "IMAGES", "WS", "Id", "Source",
	"NUMBER", "DIGIT",
}

type NuggetLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewNuggetLexer(input antlr.CharStream) *NuggetLexer {

	l := new(NuggetLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Nugget.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// NuggetLexer tokens.
const (
	NuggetLexerT__0    = 1
	NuggetLexerT__1    = 2
	NuggetLexerT__2    = 3
	NuggetLexerT__3    = 4
	NuggetLexerT__4    = 5
	NuggetLexerT__5    = 6
	NuggetLexerT__6    = 7
	NuggetLexerSIN     = 8
	NuggetLexerLOAD    = 9
	NuggetLexerFROM    = 10
	NuggetLexerSELECT  = 11
	NuggetLexerHASH    = 12
	NuggetLexerEXTRACT = 13
	NuggetLexerFILES   = 14
	NuggetLexerIMAGES  = 15
	NuggetLexerWS      = 16
	NuggetLexerId      = 17
	NuggetLexerSource  = 18
	NuggetLexerNUMBER  = 19
)
